name: "build and publish"

on:
  push:
    branches:
      - master
    paths:
      - Cargo.toml
  workflow_dispatch:

permissions:
  contents: write

env:
  BUTLER_API_KEY: ${{ secrets.BUTLER_API_KEY }}
  ITCH_PROJECT_NAME: "cweampuffs-adventure"
  ITCH_USERNAME: "kizuto13"
  BIN_NAME: "cweampuffs_adventure"

jobs:
  check-tag:
    runs-on: ubuntu-latest
    outputs:
      is-new: ${{ steps.check-new.outputs.is_new_version }}
      new-tag: ${{ steps.check-new.outputs.version }}
    steps:
      - name: checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: '0'

      - name: check current tag
        id: check-new
        uses: digicatapult/check-version@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          package_manager: 'cargo'
          cargo_package_location: './'
          fail_on_same_version: 'false'

  create-release:
    needs: check-tag
    if: ${{ needs.check-tag.outputs.is-new == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: checkout repo
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: '0'

      - name: tag head
        shell: bash
        run: |
          git tag ${{ needs.check-tag.outputs.new-tag }}
          git push origin --tags

      - name: create release
        uses: taiki-e/create-gh-release-action@v1
        with:
          ref: refs/tags/${{ needs.check-tag.outputs.new-tag }}
          token: ${{ secrets.GITHUB_TOKEN }}
          allow-missing-changelog: true
          title: 'Cweampuffs Adventure $tag'

  release-binaries:
    needs:
      - check-tag
      - create-release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - build: linux
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - build: windows
            os: windows-latest
            target: x86_64-pc-windows-gnu

    steps:
      - name: checkout repo
        uses: actions/checkout@v4

      - name: install linux dependencies
        uses: ./.github/actions/install-linux-deps

      - name: build and upload binaries
        uses: taiki-e/upload-rust-binary-action@v1
        with:
          bin: ${{ env.BIN_NAME }}
          target: ${{ matrix.target }}
          archive: $bin_${{ matrix.build }}
          ref: refs/tags/${{ needs.check-tag.outputs.new-tag }}
          token: ${{ secrets.GITHUB_TOKEN }}
          include: ./assets
          zip: all
          tar: none

  release-itch:
    runs-on: ubuntu-latest
    needs:
      - check-tag
      - release-binaries

    strategy:
      max-parallel: 1 #Itch doesn't like multiple uploads at the same time
      matrix:
        platform: ["windows", "linux"]

    steps:
      - name: download binary
        uses: robinraju/release-downloader@v1
        with:
          tag: ${{ needs.check-tag.outputs.new-tag }}
          fileName: ${{ env.BIN_NAME }}_${{ matrix.platform }}.zip
          token: ${{ secrets.GITHUB_TOKEN }}

        # Itch does some cool things with filehashes to allow for partial updates. We should make use of this by giving it raw access to the files
      - name: extract build
        run: |
          mkdir ./temp
          unzip ${{ env.BIN_NAME }}_${{ matrix.platform }}.zip -d ./temp/

      - name: download butler
        run: |
          curl -L -o butler.zip https://broth.itch.ovh/butler/linux-amd64/LATEST/archive/default
          unzip butler.zip
          chmod +x butler
          ./butler -V

      - name: authorise butler
        run: ./butler login

      - name: push build
        run: |
          tag=${{ needs.check-tag.new-tag }}
          ./butler push ./temp/ $ITCH_USERNAME/$ITCH_PROJECT_NAME:${{ matrix.platform }} --userversion ${{ tag:1 }}